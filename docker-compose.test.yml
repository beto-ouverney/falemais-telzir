version: "3.9"

services:
  frontend:
    container_name: telzir_frontend_test
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
      - db
    ports:
      - 8081:8081
    volumes:
      - ./frontend:/app
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: golang:latest
    user: root
    working_dir: /app
    volumes:
      - ./backend:/app
    container_name: telzir_backend_test
    tty: true
    stdin_open: true
    command: bash
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - test
  db:
    container_name: telzir_db_test
    image: postgres
    platform: linux/x86_64
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - ./backend/db/migrations/dddcost.up_test.sql:/docker-entrypoint-initdb.d/dddcost.up_test.sql
    environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: password
        POSTGRES_DB: telzir_db_test
    networks:
      - test
networks:
  test:
    driver: bridge